def os_to_build = ['CentOS7', 'CentOS6', 'Ubuntu1604']
def osmap = ['CentOS7':['packaging':'rpm', 'init':'systemd', 'build_env':'alanfranz/fwd-centos-7:latest', 
                        'build_deps':['gcc', 'bison', 'flex', 'm4', 'pam-devel', 'tcp_wrappers', 'tcp_wrappers-devel'], 
                        'install_deps':[], test_env:'centos:7'],
             'CentOS6':['packaging':'rpm', 'init':'sysv', 'build_env':'alanfranz/fwd-centos-6:latest',
                        'build_deps':['gcc', 'bison', 'flex', 'm4', 'pam-devel', 'tcp_wrappers', 'tcp_wrappers-devel'],
                        'install_deps':['pam-devel', 'tcp_wrappers'], test_env:'centos:6'],
             'Ubuntu1604':['packaging':'deb', 'init':'systemd', 'build_env':'alanfranz/fwd-ubuntu-xenial:latest',
                        'build_deps':['gcc', 'bison', 'flex', 'm4', 'libpam0g-dev', 'libwrap0', 'libwrap0-dev'],
                        'install_deps':['libpam0g-dev', 'libwrap0'], test_env:'ubuntu:xenial'],
            ]

def branches = [:]

for (x in os_to_build) {
  def OS = x
  def install_deps = ""
  if(osmap[OS]['install_deps']) {
    install_deps = "--depends " + osmap[OS]['install_deps'].join(' --depends ')
  }
  branches[OS] = {
    node {
      docker.image(osmap[OS]['build_env']).inside('-u 0') {
        stage('setup_env') {
          if(osmap[OS]['packaging'] == 'rpm') {
            sh "yum -y install ${osmap[OS]['build_deps'].join(' ')}"
          } else {
            sh 'apt-get update; apt-get install -y ${osmap[OS]['build_deps'].join(' ')}'
          }
        }
        stage('download') {
          git url: 'git@github.com:bordershot/shrubbery_tac_plus.git'
        }
        stage('build') {
          sh "mkdir $WORKSPACE/fpm-build-${OS}"
          sh 'if [ -d "dist" ]; then [ -d "dist/default" ] && rsync -a dist/default/ $OUTPUT_DIR; fi'
          if(osmap[OS]['init'] == 'systemd') {
            sh '[ -d "dist/systemd" ] && rsync -a dist/systemd/ $OUTPUT_DIR'
          } else {
            sh '[ -d "dist/sysv" ] && rsync -a dist/sysv/ $OUTPUT_DIR'
          }
          sh "./configure && make && make install DESTDIR=$WORKSPACE/fpm-build-${OS}"
        }
        stage('package') {
          sh "fpm -f -t ${osmap[OS]['packaging']} -s dir -n tacacs --version 1.0 --description "DD TacPlus" ${install_deps} -C $WORKSPACE/fpm-build-${OS} ."
          sh "rm -rf $WORKSPACE/fpm-build-${OS}"
        }
      }
      stage('test') {
        docker.image(osmap[OS]['test_env']).inside('-u 0') {
          sh 'yum -y install $WORKSPACE/tacacs*.rpm'
        }
      }
    }
  }
}

parallel branches
